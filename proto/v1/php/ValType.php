<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/v1/module-no-option.proto

/**
 * Used to type the arguments and return types from wasm elements such as import
 * and export functions.
 *
 * Protobuf type <code>ValType</code>
 */
class ValType
{
    /**
     * Generated from protobuf enum <code>I32 = 0;</code>
     */
    const I32 = 0;
    /**
     * Generated from protobuf enum <code>I64 = 1;</code>
     */
    const I64 = 1;
    /**
     * Generated from protobuf enum <code>F32 = 2;</code>
     */
    const F32 = 2;
    /**
     * Generated from protobuf enum <code>F64 = 3;</code>
     */
    const F64 = 3;
    /**
     * Generated from protobuf enum <code>V128 = 4;</code>
     */
    const V128 = 4;
    /**
     * Generated from protobuf enum <code>FuncRef = 5;</code>
     */
    const FuncRef = 5;
    /**
     * Generated from protobuf enum <code>ExternRef = 6;</code>
     */
    const ExternRef = 6;

    private static $valueToName = [
        self::I32 => 'I32',
        self::I64 => 'I64',
        self::F32 => 'F32',
        self::F64 => 'F64',
        self::V128 => 'V128',
        self::FuncRef => 'FuncRef',
        self::ExternRef => 'ExternRef',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

